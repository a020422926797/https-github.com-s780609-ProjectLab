//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrmEarlyBound
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.42")]
	public enum EmailServerProfileState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Holds the Email Server Profiles of an organization
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("emailserverprofile")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.42")]
	public partial class EmailServerProfile : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public EmailServerProfile() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "emailserverprofile";
		
		public const string EntitySchemaName = "EmailServerProfile";
		
		public const string PrimaryIdAttribute = "emailserverprofileid";
		
		public const string PrimaryNameAttribute = "name";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedBy");
				this.SetAttributeValue("createdby", value);
				this.OnPropertyChanged("CreatedBy");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOn");
				this.SetAttributeValue("createdon", value);
				this.OnPropertyChanged("CreatedOn");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Information about server credentials
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialinfo")]
		public string CredentialInfo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("credentialinfo");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CredentialInfo");
				this.SetAttributeValue("credentialinfo", value);
				this.OnPropertyChanged("CredentialInfo");
			}
		}
		
		/// <summary>
		/// encryption key used for CredentialInfo
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dataencryptionkey")]
		public string DataEncryptionKey
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dataencryptionkey");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DataEncryptionKey");
				this.SetAttributeValue("dataencryptionkey", value);
				this.OnPropertyChanged("DataEncryptionKey");
			}
		}
		
		/// <summary>
		/// Type the default location of the server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultserverlocation")]
		public string DefaultServerLocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("defaultserverlocation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DefaultServerLocation");
				this.SetAttributeValue("defaultserverlocation", value);
				this.OnPropertyChanged("DefaultServerLocation");
			}
		}
		
		/// <summary>
		/// Type additional information that describes the email server profile.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Unique identifier of the email server profile.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailserverprofileid")]
		public System.Nullable<System.Guid> EmailServerProfileId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("emailserverprofileid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EmailServerProfileId");
				this.SetAttributeValue("emailserverprofileid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("EmailServerProfileId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailserverprofileid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.EmailServerProfileId = value;
			}
		}
		
		/// <summary>
		/// Email Server Type Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailservertypename")]
		public string EmailServerTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailservertypename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EmailServerTypeName");
				this.SetAttributeValue("emailservertypename", value);
				this.OnPropertyChanged("EmailServerTypeName");
			}
		}
		
		/// <summary>
		/// Indicates the code page to use when encoding email content.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("encodingcodepage")]
		public string EncodingCodePage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("encodingcodepage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EncodingCodePage");
				this.SetAttributeValue("encodingcodepage", value);
				this.OnPropertyChanged("EncodingCodePage");
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityImage");
				this.SetAttributeValue("entityimage", value);
				this.OnPropertyChanged("EntityImage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityImage_Timestamp");
				this.SetAttributeValue("entityimage_timestamp", value);
				this.OnPropertyChanged("EntityImage_Timestamp");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityImage_URL");
				this.SetAttributeValue("entityimage_url", value);
				this.OnPropertyChanged("EntityImage_URL");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityImageId");
				this.SetAttributeValue("entityimageid", value);
				this.OnPropertyChanged("EntityImageId");
			}
		}
		
		/// <summary>
		/// Type the tenant ID of Exchange Online.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeonlinetenantid")]
		public string ExchangeOnlineTenantId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("exchangeonlinetenantid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExchangeOnlineTenantId");
				this.SetAttributeValue("exchangeonlinetenantid", value);
				this.OnPropertyChanged("ExchangeOnlineTenantId");
			}
		}
		
		/// <summary>
		/// Select the version of Exchange that is on the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeversion")]
		public Microsoft.Xrm.Sdk.OptionSetValue ExchangeVersion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("exchangeversion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExchangeVersion");
				this.SetAttributeValue("exchangeversion", value);
				this.OnPropertyChanged("ExchangeVersion");
			}
		}
		
		/// <summary>
		/// Select the version of Exchange that is on the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeversion")]
		public virtual EmailServerProfile_ExchangeVersion? ExchangeVersionEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_ExchangeVersion?)(EntityOptionSetEnum.GetEnum(this, "exchangeversion")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExchangeVersion");
				this.SetAttributeValue("exchangeversion", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ExchangeVersion");
			}
		}
		
		/// <summary>
		/// Select the incoming email authentication protocol that is used for connecting to the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingauthenticationprotocol")]
		public Microsoft.Xrm.Sdk.OptionSetValue IncomingAuthenticationProtocol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("incomingauthenticationprotocol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingAuthenticationProtocol");
				this.SetAttributeValue("incomingauthenticationprotocol", value);
				this.OnPropertyChanged("IncomingAuthenticationProtocol");
			}
		}
		
		/// <summary>
		/// Select the incoming email authentication protocol that is used for connecting to the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingauthenticationprotocol")]
		public virtual EmailServerProfile_AuthenticationProtocol? IncomingAuthenticationProtocolEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_AuthenticationProtocol?)(EntityOptionSetEnum.GetEnum(this, "incomingauthenticationprotocol")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingAuthenticationProtocol");
				this.SetAttributeValue("incomingauthenticationprotocol", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("IncomingAuthenticationProtocol");
			}
		}
		
		/// <summary>
		/// Select how credentials will be retrieved for incoming email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingcredentialretrieval")]
		public Microsoft.Xrm.Sdk.OptionSetValue IncomingCredentialRetrieval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("incomingcredentialretrieval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingCredentialRetrieval");
				this.SetAttributeValue("incomingcredentialretrieval", value);
				this.OnPropertyChanged("IncomingCredentialRetrieval");
			}
		}
		
		/// <summary>
		/// Select how credentials will be retrieved for incoming email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingcredentialretrieval")]
		public virtual EmailServerProfile_IncomingCredentialRetrieval? IncomingCredentialRetrievalEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_IncomingCredentialRetrieval?)(EntityOptionSetEnum.GetEnum(this, "incomingcredentialretrieval")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingCredentialRetrieval");
				this.SetAttributeValue("incomingcredentialretrieval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("IncomingCredentialRetrieval");
			}
		}
		
		/// <summary>
		/// Indicates the incoming partner application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingpartnerapplication")]
		public Microsoft.Xrm.Sdk.EntityReference IncomingPartnerApplication
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("incomingpartnerapplication");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingPartnerApplication");
				this.SetAttributeValue("incomingpartnerapplication", value);
				this.OnPropertyChanged("IncomingPartnerApplication");
			}
		}
		
		/// <summary>
		/// Type the password for incoming email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingpassword")]
		public string IncomingPassword
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("incomingpassword");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingPassword");
				this.SetAttributeValue("incomingpassword", value);
				this.OnPropertyChanged("IncomingPassword");
			}
		}
		
		/// <summary>
		/// Type the Exchange port number for incoming mail.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingportnumber")]
		public System.Nullable<int> IncomingPortNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("incomingportnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingPortNumber");
				this.SetAttributeValue("incomingportnumber", value);
				this.OnPropertyChanged("IncomingPortNumber");
			}
		}
		
		/// <summary>
		/// Type the location of the server for incoming email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingserverlocation")]
		public string IncomingServerLocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("incomingserverlocation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingServerLocation");
				this.SetAttributeValue("incomingserverlocation", value);
				this.OnPropertyChanged("IncomingServerLocation");
			}
		}
		
		/// <summary>
		/// Select whether to use impersonation to access the mailbox to process incoming emails.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incominguseimpersonation")]
		public System.Nullable<bool> IncomingUseImpersonation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("incominguseimpersonation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingUseImpersonation");
				this.SetAttributeValue("incominguseimpersonation", value);
				this.OnPropertyChanged("IncomingUseImpersonation");
			}
		}
		
		/// <summary>
		/// Type the user name for incoming email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingusername")]
		public string IncomingUserName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("incomingusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingUserName");
				this.SetAttributeValue("incomingusername", value);
				this.OnPropertyChanged("IncomingUserName");
			}
		}
		
		/// <summary>
		/// Select whether to use the Secure Sockets Layer (SSL) protocol for incoming email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingusessl")]
		public System.Nullable<bool> IncomingUseSSL
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("incomingusessl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IncomingUseSSL");
				this.SetAttributeValue("incomingusessl", value);
				this.OnPropertyChanged("IncomingUseSSL");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdataencryptionkeyset")]
		public System.Nullable<bool> IsDataEncryptionKeySet
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdataencryptionkeyset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsDataEncryptionKeySet");
				this.SetAttributeValue("isdataencryptionkeyset", value);
				this.OnPropertyChanged("IsDataEncryptionKeySet");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isincomingpasswordset")]
		public System.Nullable<bool> IsIncomingPasswordSet
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isincomingpasswordset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsIncomingPasswordSet");
				this.SetAttributeValue("isincomingpasswordset", value);
				this.OnPropertyChanged("IsIncomingPasswordSet");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoutgoingpasswordset")]
		public System.Nullable<bool> IsOutgoingPasswordSet
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isoutgoingpasswordset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsOutgoingPasswordSet");
				this.SetAttributeValue("isoutgoingpasswordset", value);
				this.OnPropertyChanged("IsOutgoingPasswordSet");
			}
		}
		
		/// <summary>
		/// Shows the last test authorization status of email server profile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastauthorizationstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue LastAuthorizationStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("lastauthorizationstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastAuthorizationStatus");
				this.SetAttributeValue("lastauthorizationstatus", value);
				this.OnPropertyChanged("LastAuthorizationStatus");
			}
		}
		
		/// <summary>
		/// Shows the last test authorization status of email server profile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastauthorizationstatus")]
		public virtual EmailServerProfile_LastAuthorizationStatus? LastAuthorizationStatusEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_LastAuthorizationStatus?)(EntityOptionSetEnum.GetEnum(this, "lastauthorizationstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastAuthorizationStatus");
				this.SetAttributeValue("lastauthorizationstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("LastAuthorizationStatus");
			}
		}
		
		/// <summary>
		/// Shows the Dynamics 365 message obtained during the Last Test
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastcrmmessage")]
		public string LastCrmMessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("lastcrmmessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastCrmMessage");
				this.SetAttributeValue("lastcrmmessage", value);
				this.OnPropertyChanged("LastCrmMessage");
			}
		}
		
		/// <summary>
		/// Shows the last test Execution status of email server profile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestexecutionstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue LastTestExecutionStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("lasttestexecutionstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastTestExecutionStatus");
				this.SetAttributeValue("lasttestexecutionstatus", value);
				this.OnPropertyChanged("LastTestExecutionStatus");
			}
		}
		
		/// <summary>
		/// Shows the last test Execution status of email server profile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestexecutionstatus")]
		public virtual EmailServerProfile_LastTestExecutionStatus? LastTestExecutionStatusEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_LastTestExecutionStatus?)(EntityOptionSetEnum.GetEnum(this, "lasttestexecutionstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastTestExecutionStatus");
				this.SetAttributeValue("lasttestexecutionstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("LastTestExecutionStatus");
			}
		}
		
		/// <summary>
		/// Shows the EWS Request created during the Last Test
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestrequest")]
		public string LastTestRequest
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("lasttestrequest");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastTestRequest");
				this.SetAttributeValue("lasttestrequest", value);
				this.OnPropertyChanged("LastTestRequest");
			}
		}
		
		/// <summary>
		/// Shows the EWS Response obtained during the Last Test
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestresponse")]
		public string LastTestResponse
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("lasttestresponse");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastTestResponse");
				this.SetAttributeValue("lasttestresponse", value);
				this.OnPropertyChanged("LastTestResponse");
			}
		}
		
		/// <summary>
		/// Shows the Last Test Start date and time
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastteststarttime")]
		public System.Nullable<System.DateTime> LastTestStartTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastteststarttime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastTestStartTime");
				this.SetAttributeValue("lastteststarttime", value);
				this.OnPropertyChanged("LastTestStartTime");
			}
		}
		
		/// <summary>
		/// Shows the Time taken while running the last test
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttesttotalexecutiontime")]
		public System.Nullable<long> LastTestTotalExecutionTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("lasttesttotalexecutiontime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastTestTotalExecutionTime");
				this.SetAttributeValue("lasttesttotalexecutiontime", value);
				this.OnPropertyChanged("LastTestTotalExecutionTime");
			}
		}
		
		/// <summary>
		/// Shows the last test Validation status of email server profile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestvalidationstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue LastTestValidationStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("lasttestvalidationstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastTestValidationStatus");
				this.SetAttributeValue("lasttestvalidationstatus", value);
				this.OnPropertyChanged("LastTestValidationStatus");
			}
		}
		
		/// <summary>
		/// Shows the last test Validation status of email server profile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestvalidationstatus")]
		public virtual EmailServerProfile_LastTestValidationStatus? LastTestValidationStatusEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_LastTestValidationStatus?)(EntityOptionSetEnum.GetEnum(this, "lasttestvalidationstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastTestValidationStatus");
				this.SetAttributeValue("lasttestvalidationstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("LastTestValidationStatus");
			}
		}
		
		/// <summary>
		/// Maximum number of concurrent connections allowed to the email server per authenticated user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxconcurrentconnections")]
		public System.Nullable<int> MaxConcurrentConnections
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxconcurrentconnections");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MaxConcurrentConnections");
				this.SetAttributeValue("maxconcurrentconnections", value);
				this.OnPropertyChanged("MaxConcurrentConnections");
			}
		}
		
		/// <summary>
		/// Minimum polling interval, in minutes, for mailboxes that are associated with this email server profile.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("minpollingintervalinminutes")]
		public System.Nullable<int> MinPollingIntervalInMinutes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("minpollingintervalinminutes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MinPollingIntervalInMinutes");
				this.SetAttributeValue("minpollingintervalinminutes", value);
				this.OnPropertyChanged("MinPollingIntervalInMinutes");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedBy");
				this.SetAttributeValue("modifiedby", value);
				this.OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOn");
				this.SetAttributeValue("modifiedon", value);
				this.OnPropertyChanged("ModifiedOn");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Indicates whether to move undelivered incoming emails to the Undeliverable folder in Microsoft Exchange.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("moveundeliveredemails")]
		public System.Nullable<bool> MoveUndeliveredEmails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("moveundeliveredemails");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MoveUndeliveredEmails");
				this.SetAttributeValue("moveundeliveredemails", value);
				this.OnPropertyChanged("MoveUndeliveredEmails");
			}
		}
		
		/// <summary>
		/// Type a meaningful name for the email server profile. This name is displayed when you need to select an email server profile.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OrganizationId");
				this.SetAttributeValue("organizationid", value);
				this.OnPropertyChanged("OrganizationId");
			}
		}
		
		/// <summary>
		/// Select the outgoing email authentication protocol that is used for connecting to the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingauthenticationprotocol")]
		public Microsoft.Xrm.Sdk.OptionSetValue OutgoingAuthenticationProtocol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("outgoingauthenticationprotocol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingAuthenticationProtocol");
				this.SetAttributeValue("outgoingauthenticationprotocol", value);
				this.OnPropertyChanged("OutgoingAuthenticationProtocol");
			}
		}
		
		/// <summary>
		/// Select the outgoing email authentication protocol that is used for connecting to the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingauthenticationprotocol")]
		public virtual EmailServerProfile_AuthenticationProtocol? OutgoingAuthenticationProtocolEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_AuthenticationProtocol?)(EntityOptionSetEnum.GetEnum(this, "outgoingauthenticationprotocol")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingAuthenticationProtocol");
				this.SetAttributeValue("outgoingauthenticationprotocol", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("OutgoingAuthenticationProtocol");
			}
		}
		
		/// <summary>
		/// Indicates whether the email connector will grant delegate access permissions to the accessing user when required while processing outgoing emails.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingautograntdelegateaccess")]
		public System.Nullable<bool> OutgoingAutoGrantDelegateAccess
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("outgoingautograntdelegateaccess");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingAutoGrantDelegateAccess");
				this.SetAttributeValue("outgoingautograntdelegateaccess", value);
				this.OnPropertyChanged("OutgoingAutoGrantDelegateAccess");
			}
		}
		
		/// <summary>
		/// Select how credentials will be retrieved for outgoing email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingcredentialretrieval")]
		public Microsoft.Xrm.Sdk.OptionSetValue OutgoingCredentialRetrieval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("outgoingcredentialretrieval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingCredentialRetrieval");
				this.SetAttributeValue("outgoingcredentialretrieval", value);
				this.OnPropertyChanged("OutgoingCredentialRetrieval");
			}
		}
		
		/// <summary>
		/// Select how credentials will be retrieved for outgoing email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingcredentialretrieval")]
		public virtual EmailServerProfile_OutgoingCredentialRetrieval? OutgoingCredentialRetrievalEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_OutgoingCredentialRetrieval?)(EntityOptionSetEnum.GetEnum(this, "outgoingcredentialretrieval")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingCredentialRetrieval");
				this.SetAttributeValue("outgoingcredentialretrieval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("OutgoingCredentialRetrieval");
			}
		}
		
		/// <summary>
		/// Indicates the outgoing partner application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingpartnerapplication")]
		public Microsoft.Xrm.Sdk.EntityReference OutgoingPartnerApplication
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("outgoingpartnerapplication");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingPartnerApplication");
				this.SetAttributeValue("outgoingpartnerapplication", value);
				this.OnPropertyChanged("OutgoingPartnerApplication");
			}
		}
		
		/// <summary>
		/// Type the password for outgoing email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingpassword")]
		public string OutgoingPassword
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("outgoingpassword");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingPassword");
				this.SetAttributeValue("outgoingpassword", value);
				this.OnPropertyChanged("OutgoingPassword");
			}
		}
		
		/// <summary>
		/// Type the Exchange port number for outgoing mail.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingportnumber")]
		public System.Nullable<int> OutgoingPortNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("outgoingportnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingPortNumber");
				this.SetAttributeValue("outgoingportnumber", value);
				this.OnPropertyChanged("OutgoingPortNumber");
			}
		}
		
		/// <summary>
		/// Type the location of the server for outgoing email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingserverlocation")]
		public string OutgoingServerLocation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("outgoingserverlocation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingServerLocation");
				this.SetAttributeValue("outgoingserverlocation", value);
				this.OnPropertyChanged("OutgoingServerLocation");
			}
		}
		
		/// <summary>
		/// Select whether to use impersonation for accessing the mailbox to process outgoing emails.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoinguseimpersonation")]
		public System.Nullable<bool> OutgoingUseImpersonation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("outgoinguseimpersonation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingUseImpersonation");
				this.SetAttributeValue("outgoinguseimpersonation", value);
				this.OnPropertyChanged("OutgoingUseImpersonation");
			}
		}
		
		/// <summary>
		/// Type the user name for outgoing email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingusername")]
		public string OutgoingUsername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("outgoingusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingUsername");
				this.SetAttributeValue("outgoingusername", value);
				this.OnPropertyChanged("OutgoingUsername");
			}
		}
		
		/// <summary>
		/// Select whether to use the Secure Sockets Layer (SSL) protocol for outgoing email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingusessl")]
		public System.Nullable<bool> OutgoingUseSSL
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("outgoingusessl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutgoingUseSSL");
				this.SetAttributeValue("outgoingusessl", value);
				this.OnPropertyChanged("OutgoingUseSSL");
			}
		}
		
		/// <summary>
		/// Email Server Profile Owner's email address
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneremailaddress")]
		public string OwnerEmailAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("owneremailaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerEmailAddress");
				this.SetAttributeValue("owneremailaddress", value);
				this.OnPropertyChanged("OwnerEmailAddress");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Select the business unit that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningBusinessUnit");
				this.SetAttributeValue("owningbusinessunit", value);
				this.OnPropertyChanged("OwningBusinessUnit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningTeam");
				this.SetAttributeValue("owningteam", value);
				this.OnPropertyChanged("OwningTeam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwningUser");
				this.SetAttributeValue("owninguser", value);
				this.OnPropertyChanged("OwningUser");
			}
		}
		
		/// <summary>
		/// Shows the date and time after which email messages that are received will be processed for mailboxes associated with the email server profile.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processemailsreceivedafter")]
		public System.Nullable<System.DateTime> ProcessEmailsReceivedAfter
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("processemailsreceivedafter");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProcessEmailsReceivedAfter");
				this.SetAttributeValue("processemailsreceivedafter", value);
				this.OnPropertyChanged("ProcessEmailsReceivedAfter");
			}
		}
		
		/// <summary>
		/// Select whether to send an email alert if more than 50% of the mailboxes in this email server profile failed to synchronize in an hour period.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendemailalert")]
		public System.Nullable<bool> SendEmailAlert
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sendemailalert");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SendEmailAlert");
				this.SetAttributeValue("sendemailalert", value);
				this.OnPropertyChanged("SendEmailAlert");
			}
		}
		
		/// <summary>
		/// Select the profile's email server type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servertype")]
		public Microsoft.Xrm.Sdk.OptionSetValue ServerType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("servertype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServerType");
				this.SetAttributeValue("servertype", value);
				this.OnPropertyChanged("ServerType");
			}
		}
		
		/// <summary>
		/// Select the profile's email server type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servertype")]
		public virtual EmailServerProfile_ServerType? ServerTypeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_ServerType?)(EntityOptionSetEnum.GetEnum(this, "servertype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServerType");
				this.SetAttributeValue("servertype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ServerType");
			}
		}
		
		/// <summary>
		/// Shows whether the email server profile is active or inactive.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<CrmEarlyBound.EmailServerProfileState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((CrmEarlyBound.EmailServerProfileState)(System.Enum.ToObject(typeof(CrmEarlyBound.EmailServerProfileState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the email server profile's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Select the email server profile's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual EmailServerProfile_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((EmailServerProfile_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Select whether to timeout a single mailbox.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeoutmailboxconnection")]
		public System.Nullable<bool> TimeoutMailboxConnection
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("timeoutmailboxconnection");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeoutMailboxConnection");
				this.SetAttributeValue("timeoutmailboxconnection", value);
				this.OnPropertyChanged("TimeoutMailboxConnection");
			}
		}
		
		/// <summary>
		/// Type the number of milliseconds to timeout a single mailbox. The upper limit is 100 seconds.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeoutmailboxconnectionafteramount")]
		public System.Nullable<int> TimeoutMailboxConnectionAfterAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timeoutmailboxconnectionafteramount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeoutMailboxConnectionAfterAmount");
				this.SetAttributeValue("timeoutmailboxconnectionafteramount", value);
				this.OnPropertyChanged("TimeoutMailboxConnectionAfterAmount");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Select whether to automatically discover the server location
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("useautodiscover")]
		public System.Nullable<bool> UseAutoDiscover
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("useautodiscover");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UseAutoDiscover");
				this.SetAttributeValue("useautodiscover", value);
				this.OnPropertyChanged("UseAutoDiscover");
			}
		}
		
		/// <summary>
		/// Select whether to use the Exchange Online Tenant ID obtained from running Microsoft Azure PowerShell cmdlets (highly recommended). If you select No, you can edit this field manually
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usedefaulttenantid")]
		public System.Nullable<bool> UseDefaultTenantId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usedefaulttenantid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UseDefaultTenantId");
				this.SetAttributeValue("usedefaulttenantid", value);
				this.OnPropertyChanged("UseDefaultTenantId");
			}
		}
		
		/// <summary>
		/// Select whether to use the same settings for incoming and outgoing connections.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usesamesettingsforoutgoingconnections")]
		public System.Nullable<bool> UseSameSettingsForOutgoingConnections
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usesamesettingsforoutgoingconnections");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UseSameSettingsForOutgoingConnections");
				this.SetAttributeValue("usesamesettingsforoutgoingconnections", value);
				this.OnPropertyChanged("UseSameSettingsForOutgoingConnections");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the email server profile.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("VersionNumber");
				this.SetAttributeValue("versionnumber", value);
				this.OnPropertyChanged("VersionNumber");
			}
		}
		
		/// <summary>
		/// 1:N EmailServerProfile_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("EmailServerProfile_Annotation")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.Annotation> EmailServerProfile_Annotation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.Annotation>("EmailServerProfile_Annotation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EmailServerProfile_Annotation");
				this.SetRelatedEntities<CrmEarlyBound.Annotation>("EmailServerProfile_Annotation", null, value);
				this.OnPropertyChanged("EmailServerProfile_Annotation");
			}
		}
		
		/// <summary>
		/// 1:N emailserverprofile_asyncoperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailserverprofile_asyncoperations")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.AsyncOperation> emailserverprofile_asyncoperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.AsyncOperation>("emailserverprofile_asyncoperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("emailserverprofile_asyncoperations");
				this.SetRelatedEntities<CrmEarlyBound.AsyncOperation>("emailserverprofile_asyncoperations", null, value);
				this.OnPropertyChanged("emailserverprofile_asyncoperations");
			}
		}
		
		/// <summary>
		/// 1:N emailserverprofile_duplicatebaserecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailserverprofile_duplicatebaserecord")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.DuplicateRecord> emailserverprofile_duplicatebaserecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.DuplicateRecord>("emailserverprofile_duplicatebaserecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("emailserverprofile_duplicatebaserecord");
				this.SetRelatedEntities<CrmEarlyBound.DuplicateRecord>("emailserverprofile_duplicatebaserecord", null, value);
				this.OnPropertyChanged("emailserverprofile_duplicatebaserecord");
			}
		}
		
		/// <summary>
		/// 1:N emailserverprofile_duplicatematchingrecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailserverprofile_duplicatematchingrecord")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.DuplicateRecord> emailserverprofile_duplicatematchingrecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.DuplicateRecord>("emailserverprofile_duplicatematchingrecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("emailserverprofile_duplicatematchingrecord");
				this.SetRelatedEntities<CrmEarlyBound.DuplicateRecord>("emailserverprofile_duplicatematchingrecord", null, value);
				this.OnPropertyChanged("emailserverprofile_duplicatematchingrecord");
			}
		}
		
		/// <summary>
		/// 1:N EmailServerProfile_Organization
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("EmailServerProfile_Organization")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.Organization> EmailServerProfile_Organization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.Organization>("EmailServerProfile_Organization", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EmailServerProfile_Organization");
				this.SetRelatedEntities<CrmEarlyBound.Organization>("EmailServerProfile_Organization", null, value);
				this.OnPropertyChanged("EmailServerProfile_Organization");
			}
		}
		
		/// <summary>
		/// 1:N tracelog_EmailServerProfile
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("tracelog_EmailServerProfile")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.TraceLog> tracelog_EmailServerProfile
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.TraceLog>("tracelog_EmailServerProfile", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("tracelog_EmailServerProfile");
				this.SetRelatedEntities<CrmEarlyBound.TraceLog>("tracelog_EmailServerProfile", null, value);
				this.OnPropertyChanged("tracelog_EmailServerProfile");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_emailserverprofile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_emailserverprofile")]
		public CrmEarlyBound.BusinessUnit business_unit_emailserverprofile
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.BusinessUnit>("business_unit_emailserverprofile", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("business_unit_emailserverprofile");
				this.SetRelatedEntity<CrmEarlyBound.BusinessUnit>("business_unit_emailserverprofile", null, value);
				this.OnPropertyChanged("business_unit_emailserverprofile");
			}
		}
		
		/// <summary>
		/// N:1 lk_emailserverprofile_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_emailserverprofile_createdby")]
		public CrmEarlyBound.SystemUser lk_emailserverprofile_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("lk_emailserverprofile_createdby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_emailserverprofile_createdby");
				this.SetRelatedEntity<CrmEarlyBound.SystemUser>("lk_emailserverprofile_createdby", null, value);
				this.OnPropertyChanged("lk_emailserverprofile_createdby");
			}
		}
		
		/// <summary>
		/// N:1 lk_emailserverprofile_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_emailserverprofile_createdonbehalfby")]
		public CrmEarlyBound.SystemUser lk_emailserverprofile_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("lk_emailserverprofile_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_emailserverprofile_createdonbehalfby");
				this.SetRelatedEntity<CrmEarlyBound.SystemUser>("lk_emailserverprofile_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_emailserverprofile_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_emailserverprofile_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_emailserverprofile_modifiedby")]
		public CrmEarlyBound.SystemUser lk_emailserverprofile_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("lk_emailserverprofile_modifiedby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_emailserverprofile_modifiedby");
				this.SetRelatedEntity<CrmEarlyBound.SystemUser>("lk_emailserverprofile_modifiedby", null, value);
				this.OnPropertyChanged("lk_emailserverprofile_modifiedby");
			}
		}
		
		/// <summary>
		/// N:1 lk_emailserverprofile_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_emailserverprofile_modifiedonbehalfby")]
		public CrmEarlyBound.SystemUser lk_emailserverprofile_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("lk_emailserverprofile_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_emailserverprofile_modifiedonbehalfby");
				this.SetRelatedEntity<CrmEarlyBound.SystemUser>("lk_emailserverprofile_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_emailserverprofile_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 organization_emailserverprofile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_emailserverprofile")]
		public CrmEarlyBound.Organization organization_emailserverprofile
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.Organization>("organization_emailserverprofile", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("organization_emailserverprofile");
				this.SetRelatedEntity<CrmEarlyBound.Organization>("organization_emailserverprofile", null, value);
				this.OnPropertyChanged("organization_emailserverprofile");
			}
		}
		
		/// <summary>
		/// N:1 team_emailserverprofile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_emailserverprofile")]
		public CrmEarlyBound.Team team_emailserverprofile
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.Team>("team_emailserverprofile", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("team_emailserverprofile");
				this.SetRelatedEntity<CrmEarlyBound.Team>("team_emailserverprofile", null, value);
				this.OnPropertyChanged("team_emailserverprofile");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public EmailServerProfile(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["emailserverprofileid"] = base.Id;
                        break;
                    case "emailserverprofileid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}